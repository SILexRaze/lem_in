==16687== Memcheck, a memory error detector
==16687== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==16687== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==16687== Command: ./lem_in
==16687== Parent PID: 16219
==16687== 
==16687== 
==16687== HEAP SUMMARY:
==16687==     in use at exit: 19,151 bytes in 169 blocks
==16687==   total heap usage: 206 allocs, 37 frees, 26,979 bytes allocated
==16687== 
==16687== 1 bytes in 1 blocks are definitely lost in loss record 1 of 49
==16687==    at 0x10009C616: malloc (in /Users/vifonne/.brew/Cellar/valgrind/3.14.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16687==    by 0x100001F6A: ft_strdup (in ./lem_in)
==16687==    by 0x100002870: ft_parse_tmp (in ./lem_in)
==16687==    by 0x100002A75: get_next_line (in ./lem_in)
==16687==    by 0x100000744: ft_parse_room (parser.c:47)
==16687==    by 0x1000006A4: ft_read_stdin (parser.c:25)
==16687==    by 0x1000005FD: main (main.c:22)
==16687== 
==16687== 7 bytes in 1 blocks are definitely lost in loss record 3 of 49
==16687==    at 0x10009C616: malloc (in /Users/vifonne/.brew/Cellar/valgrind/3.14.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16687==    by 0x100001F6A: ft_strdup (in ./lem_in)
==16687==    by 0x100002870: ft_parse_tmp (in ./lem_in)
==16687==    by 0x100002A75: get_next_line (in ./lem_in)
==16687==    by 0x10000089D: ft_parse_pipe (parser.c:82)
==16687==    by 0x1000006BB: ft_read_stdin (parser.c:27)
==16687==    by 0x1000005FD: main (main.c:22)
==16687== 
==16687== 8 bytes in 1 blocks are definitely lost in loss record 4 of 49
==16687==    at 0x10009C616: malloc (in /Users/vifonne/.brew/Cellar/valgrind/3.14.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16687==    by 0x1000023E5: ft_strsplit (in ./lem_in)
==16687==    by 0x1000007B3: ft_parse_room (parser.c:56)
==16687==    by 0x1000006A4: ft_read_stdin (parser.c:25)
==16687==    by 0x1000005FD: main (main.c:22)
==16687== 
==16687== 72 bytes in 3 blocks are possibly lost in loss record 30 of 49
==16687==    at 0x10009CC82: calloc (in /Users/vifonne/.brew/Cellar/valgrind/3.14.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16687==    by 0x1005B6832: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==16687==    by 0x1005C9D6A: map_images (in /usr/lib/libobjc.A.dylib)
==16687==    by 0x10000B03B: dyld::notifyBatchPartial(dyld_image_states, bool, char const* (*)(dyld_image_states, unsigned int, dyld_image_info const*), bool, bool) (in /usr/lib/dyld)
==16687==    by 0x10000B255: dyld::registerObjCNotifiers(void (*)(unsigned int, char const* const*, mach_header const* const*), void (*)(char const*, mach_header const*), void (*)(char const*, mach_header const*)) (in /usr/lib/dyld)
==16687==    by 0x10020400A: _dyld_objc_notify_register (in /usr/lib/system/libdyld.dylib)
==16687==    by 0x1005B6072: _objc_init (in /usr/lib/libobjc.A.dylib)
==16687==    by 0x10019768D: _os_object_init (in /usr/lib/system/libdispatch.dylib)
==16687==    by 0x10019763A: libdispatch_init (in /usr/lib/system/libdispatch.dylib)
==16687==    by 0x1000AB9D5: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==16687==    by 0x10001BA1A: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==16687==    by 0x10001BC1D: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==16687== 
==16687== LEAK SUMMARY:
==16687==    definitely lost: 16 bytes in 3 blocks
==16687==    indirectly lost: 0 bytes in 0 blocks
==16687==      possibly lost: 72 bytes in 3 blocks
==16687==    still reachable: 1,105 bytes in 10 blocks
==16687==         suppressed: 17,958 bytes in 153 blocks
==16687== Reachable blocks (those to which a pointer was found) are not shown.
==16687== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==16687== 
==16687== For counts of detected and suppressed errors, rerun with: -v
==16687== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 12 from 12)
