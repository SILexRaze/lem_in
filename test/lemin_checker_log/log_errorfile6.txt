==16803== Memcheck, a memory error detector
==16803== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==16803== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==16803== Command: ./lem-in
==16803== Parent PID: 16336
==16803== 
==16803== 
==16803== HEAP SUMMARY:
==16803==     in use at exit: 37,258 bytes in 270 blocks
==16803==   total heap usage: 415 allocs, 145 frees, 46,824 bytes allocated
==16803== 
==16803== 1 bytes in 1 blocks are definitely lost in loss record 1 of 67
==16803==    at 0x10009E616: malloc (in /Users/vifonne/.brew/Cellar/valgrind/3.14.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16803==    by 0x10000316A: ft_strdup (in ./lem-in)
==16803==    by 0x100003B5C: ft_parse_tmp (in ./lem-in)
==16803==    by 0x100003D85: get_next_line (in ./lem-in)
==16803==    by 0x100001252: ft_read_stdin (parser.c:25)
==16803==    by 0x10000112D: main (main.c:21)
==16803== 
==16803== 3 bytes in 1 blocks are definitely lost in loss record 4 of 67
==16803==    at 0x10009E616: malloc (in /Users/vifonne/.brew/Cellar/valgrind/3.14.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16803==    by 0x10000316A: ft_strdup (in ./lem-in)
==16803==    by 0x100003B80: ft_parse_tmp (in ./lem-in)
==16803==    by 0x100003D85: get_next_line (in ./lem-in)
==16803==    by 0x1000011DF: ft_read_stdin (parser.c:21)
==16803==    by 0x10000112D: main (main.c:21)
==16803== 
==16803== 72 bytes in 3 blocks are possibly lost in loss record 39 of 67
==16803==    at 0x10009EC82: calloc (in /Users/vifonne/.brew/Cellar/valgrind/3.14.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==16803==    by 0x1005B8832: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==16803==    by 0x1005CBD6A: map_images (in /usr/lib/libobjc.A.dylib)
==16803==    by 0x10000D03B: dyld::notifyBatchPartial(dyld_image_states, bool, char const* (*)(dyld_image_states, unsigned int, dyld_image_info const*), bool, bool) (in /usr/lib/dyld)
==16803==    by 0x10000D255: dyld::registerObjCNotifiers(void (*)(unsigned int, char const* const*, mach_header const* const*), void (*)(char const*, mach_header const*), void (*)(char const*, mach_header const*)) (in /usr/lib/dyld)
==16803==    by 0x10020600A: _dyld_objc_notify_register (in /usr/lib/system/libdyld.dylib)
==16803==    by 0x1005B8072: _objc_init (in /usr/lib/libobjc.A.dylib)
==16803==    by 0x10019968D: _os_object_init (in /usr/lib/system/libdispatch.dylib)
==16803==    by 0x10019963A: libdispatch_init (in /usr/lib/system/libdispatch.dylib)
==16803==    by 0x1000AD9D5: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==16803==    by 0x10001DA1A: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==16803==    by 0x10001DC1D: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==16803== 
==16803== LEAK SUMMARY:
==16803==    definitely lost: 4 bytes in 2 blocks
==16803==    indirectly lost: 0 bytes in 0 blocks
==16803==      possibly lost: 72 bytes in 3 blocks
==16803==    still reachable: 15,128 bytes in 111 blocks
==16803==         suppressed: 22,054 bytes in 154 blocks
==16803== Reachable blocks (those to which a pointer was found) are not shown.
==16803== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==16803== 
==16803== For counts of detected and suppressed errors, rerun with: -v
==16803== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 12 from 12)
