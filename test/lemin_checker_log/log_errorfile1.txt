==17707== Memcheck, a memory error detector
==17707== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==17707== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==17707== Command: ./lem_in
==17707== Parent PID: 17276
==17707== 
==17707== 
==17707== HEAP SUMMARY:
==17707==     in use at exit: 18,529 bytes in 167 blocks
==17707==   total heap usage: 195 allocs, 28 frees, 25,875 bytes allocated
==17707== 
==17707== 5 bytes in 1 blocks are definitely lost in loss record 2 of 47
==17707==    at 0x10009C616: malloc (in /Users/vifonne/.brew/Cellar/valgrind/3.14.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==17707==    by 0x100001F6A: ft_strdup (in ./lem_in)
==17707==    by 0x100002870: ft_parse_tmp (in ./lem_in)
==17707==    by 0x100002A75: get_next_line (in ./lem_in)
==17707==    by 0x1000009EA: ft_state (parser.c:120)
==17707==    by 0x10000073A: ft_parse_room (parser.c:49)
==17707==    by 0x100000684: ft_read_stdin (parser.c:25)
==17707==    by 0x1000005DD: main (main.c:22)
==17707== 
==17707== 21 (16 direct, 5 indirect) bytes in 1 blocks are definitely lost in loss record 5 of 47
==17707==    at 0x10009C616: malloc (in /Users/vifonne/.brew/Cellar/valgrind/3.14.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==17707==    by 0x1000023E5: ft_strsplit (in ./lem_in)
==17707==    by 0x100000793: ft_parse_room (parser.c:56)
==17707==    by 0x100000684: ft_read_stdin (parser.c:25)
==17707==    by 0x1000005DD: main (main.c:22)
==17707== 
==17707== 72 bytes in 3 blocks are possibly lost in loss record 29 of 47
==17707==    at 0x10009CC82: calloc (in /Users/vifonne/.brew/Cellar/valgrind/3.14.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==17707==    by 0x1005B6832: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==17707==    by 0x1005C9D6A: map_images (in /usr/lib/libobjc.A.dylib)
==17707==    by 0x10000B03B: dyld::notifyBatchPartial(dyld_image_states, bool, char const* (*)(dyld_image_states, unsigned int, dyld_image_info const*), bool, bool) (in /usr/lib/dyld)
==17707==    by 0x10000B255: dyld::registerObjCNotifiers(void (*)(unsigned int, char const* const*, mach_header const* const*), void (*)(char const*, mach_header const*), void (*)(char const*, mach_header const*)) (in /usr/lib/dyld)
==17707==    by 0x10020400A: _dyld_objc_notify_register (in /usr/lib/system/libdyld.dylib)
==17707==    by 0x1005B6072: _objc_init (in /usr/lib/libobjc.A.dylib)
==17707==    by 0x10019768D: _os_object_init (in /usr/lib/system/libdispatch.dylib)
==17707==    by 0x10019763A: libdispatch_init (in /usr/lib/system/libdispatch.dylib)
==17707==    by 0x1000AB9D5: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==17707==    by 0x10001BA1A: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==17707==    by 0x10001BC1D: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==17707== 
==17707== LEAK SUMMARY:
==17707==    definitely lost: 21 bytes in 2 blocks
==17707==    indirectly lost: 5 bytes in 1 blocks
==17707==      possibly lost: 72 bytes in 3 blocks
==17707==    still reachable: 473 bytes in 8 blocks
==17707==         suppressed: 17,958 bytes in 153 blocks
==17707== Reachable blocks (those to which a pointer was found) are not shown.
==17707== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==17707== 
==17707== For counts of detected and suppressed errors, rerun with: -v
==17707== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 12 from 12)
